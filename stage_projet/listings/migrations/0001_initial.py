# Generated by Django 4.2.13 on 2024-08-22 16:23

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('refpersoignant', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('contact', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('disponible', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('idcat', models.AutoField(primary_key=True, serialize=False)),
                ('libcat', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Chu',
            fields=[
                ('numchu', models.AutoField(primary_key=True, serialize=False)),
                ('nomchu', models.CharField(max_length=100)),
                ('datecreation', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('Numconsulta', models.AutoField(primary_key=True, serialize=False)),
                ('motifdeconsultation', models.CharField(blank=True, max_length=254, null=True)),
                ('prescripteur_consultation', models.CharField(blank=True, max_length=100, null=True)),
                ('debut_signe', models.CharField(blank=True, max_length=100, null=True)),
                ('signe_digestifs', models.CharField(blank=True, max_length=100, null=True)),
                ('signe_extra_digestif', models.CharField(blank=True, max_length=100, null=True)),
                ('signe_asso_gene', models.CharField(blank=True, max_length=100, null=True)),
                ('nombredeverre_alcool', models.PositiveIntegerField(blank=True, null=True)),
                ('typealcool', models.CharField(blank=True, max_length=100, null=True)),
                ('frequence', models.CharField(blank=True, max_length=10, null=True)),
                ('nombrepaquettabac', models.PositiveIntegerField(blank=True, null=True)),
                ('medoc_en_cours', models.CharField(blank=True, max_length=253, null=True)),
                ('Bilanbiologiqueant', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=10)),
                ('prise_therap_tarditionnelle', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=10)),
                ('aghbs', models.CharField(blank=True, choices=[('oui', 'oui'), ('non', 'non')], max_length=3, null=True)),
                ('acanti_vhc', models.CharField(blank=True, choices=[('oui', 'oui'), ('non', 'non')], max_length=3, null=True)),
                ('acanti_vhd', models.CharField(blank=True, choices=[('oui', 'oui'), ('non', 'non')], max_length=3, null=True)),
                ('serologie_retrovi', models.CharField(blank=True, choices=[('oui', 'oui'), ('non', 'non')], max_length=3, null=True)),
                ('transaminase', models.CharField(blank=True, choices=[('oui', 'oui'), ('non', 'non')], max_length=3, null=True)),
                ('histoiredemaladie', models.CharField(blank=True, max_length=254, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('resultat', models.CharField(blank=True, max_length=254, null=True)),
                ('renseignementclinic', models.CharField(blank=True, max_length=254, null=True)),
                ('diagnostique_retenu', models.CharField(blank=True, max_length=254, null=True)),
                ('customUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lit',
            fields=[
                ('reflit', models.AutoField(primary_key=True, serialize=False)),
                ('numlit', models.PositiveIntegerField()),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.categorie')),
            ],
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('idmedicament', models.AutoField(primary_key=True, serialize=False)),
                ('nommedicament', models.CharField(choices=[('TDF', 'TDF'), ('TAF', 'TAF'), ('Entecavir', 'Entecavir'), ('Lamivudine', 'Lamivudine'), ('Adéfovir', ' Adéfovir'), ('Telbivudine', 'Telbivudine'), ('Interferon pegylé', 'Interferon pegylé'), ('Interféron pégylé', 'Interféron pégylé')], max_length=100)),
                ('dosage', models.CharField(choices=[('300 mg/j', '300 mg/j'), ('25 mg/j', '25 mg/j'), ('0.5 mg/j', '0.5 mg/j'), ('100 mg/j', '100 mg/j'), ('600 mg/j', '600 mg/j'), ('180 mg/semaine', '180 mg/semaine')], max_length=100)),
                ('dateprescription', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Ordonnance',
            fields=[
                ('reford', models.AutoField(primary_key=True, serialize=False)),
                ('consulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.consultation')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('idpatient', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('numeropatient', models.CharField(max_length=100)),
                ('contact1', models.PositiveIntegerField(blank=True, null=True)),
                ('contact2', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('personne_a_contacter', models.CharField(max_length=100)),
                ('telephone_cpu', models.PositiveIntegerField()),
                ('profession', models.CharField(max_length=100)),
                ('ville', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('sexe', models.CharField(choices=[('féminin', 'Féminin'), ('masculin', 'Masculin')], max_length=100)),
                ('commune', models.CharField(max_length=100)),
                ('quartier', models.CharField(max_length=100)),
                ('nationalite', models.CharField(max_length=100)),
                ('situation_matrimoniale', models.CharField(max_length=100)),
                ('nombre_enfant', models.PositiveIntegerField()),
                ('numerodelit', models.PositiveIntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('idpays', models.AutoField(primary_key=True, serialize=False)),
                ('nompays', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Type_personnel_soignant',
            fields=[
                ('idpersoignant', models.AutoField(primary_key=True, serialize=False)),
                ('nompersog', models.CharField(max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Sortie',
            fields=[
                ('refsortie', models.AutoField(primary_key=True, serialize=False)),
                ('datesortie', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('motifsortie', models.CharField(max_length=70)),
                ('remplipar', models.CharField(max_length=100)),
                ('datedeces', models.DateField(blank=True, null=True)),
                ('causedudeces', models.CharField(blank=True, max_length=100, null=True)),
                ('lieudeces', models.CharField(blank=True, max_length=30, null=True)),
                ('decesliea', models.CharField(blank=True, max_length=10, null=True)),
                ('daterefus', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('datedernierevisite', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('datederniererelance', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('typederelance', models.CharField(blank=True, max_length=100, null=True)),
                ('typedenouvelle', models.CharField(blank=True, max_length=100, null=True)),
                ('raison', models.CharField(blank=True, max_length=255, null=True)),
                ('commentaire', models.CharField(blank=True, max_length=255, null=True)),
                ('datedetransfert', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('nouveaucentredesuivi', models.CharField(blank=True, max_length=100, null=True)),
                ('numerodedossierdanslecentredetransfert', models.CharField(blank=True, max_length=255, null=True)),
                ('customUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('refservice', models.AutoField(primary_key=True, serialize=False)),
                ('nomservice', models.CharField(choices=[('gastro-entérologie', 'Gastro Enterologie'), ('chirurgie', 'Chirurgie')], max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Chu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.chu')),
            ],
        ),
        migrations.CreateModel(
            name='Personnel_soignant',
            fields=[
                ('refpersoignant', models.AutoField(primary_key=True, serialize=False)),
                ('mdp', models.CharField(max_length=253)),
                ('nom', models.CharField(max_length=100)),
                ('contact', models.PositiveIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.service')),
                ('Type_personnel_soignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.type_personnel_soignant')),
            ],
        ),
        migrations.CreateModel(
            name='Patientlit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateoccupation', models.DateField(blank=True, null=True)),
                ('lit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.lit')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Ordonnancemedicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(blank=True, null=True)),
                ('medicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.medicament')),
                ('ordonnance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.ordonnance')),
            ],
        ),
        migrations.AddField(
            model_name='ordonnance',
            name='peut_contenir',
            field=models.ManyToManyField(through='listings.Ordonnancemedicament', to='listings.medicament'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_heure_assignation', models.DateTimeField()),
                ('date_heure_notification', models.DateTimeField(auto_now_add=True)),
                ('customUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Hospitalisation',
            fields=[
                ('idhospitalisation', models.AutoField(primary_key=True, serialize=False)),
                ('datehospitalisation', models.DateTimeField(default=django.utils.timezone.now)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.consultation')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.service')),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('idfact', models.AutoField(primary_key=True, serialize=False)),
                ('numerofact', models.PositiveIntegerField(blank=True, null=True)),
                ('caution_versee', models.CharField(max_length=30)),
                ('date_versement', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('duree_sejour', models.PositiveIntegerField(blank=True, null=True)),
                ('modepaiment', models.CharField(max_length=100)),
                ('cout_sejour', models.CharField(max_length=100)),
                ('remboursement', models.CharField(max_length=100)),
                ('rest_a_payer', models.CharField(max_length=100)),
                ('montantpaye', models.CharField(max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnostique',
            fields=[
                ('iddiag', models.AutoField(primary_key=True, serialize=False)),
                ('libdiag', models.CharField(max_length=254)),
                ('date', models.DateField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.consultation')),
            ],
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient'),
        ),
        migrations.CreateModel(
            name='Constante',
            fields=[
                ('refconst', models.AutoField(primary_key=True, serialize=False)),
                ('poids', models.CharField(max_length=30)),
                ('taille', models.CharField(max_length=30)),
                ('temperature', models.CharField(max_length=30)),
                ('imc', models.CharField(blank=True, max_length=30, null=True)),
                ('tas', models.CharField(max_length=30)),
                ('tad', models.CharField(max_length=30)),
                ('pouls', models.CharField(max_length=30)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.AddField(
            model_name='chu',
            name='Pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.pays'),
        ),
        migrations.CreateModel(
            name='Bilan_imagerie',
            fields=[
                ('numbilimg', models.AutoField(primary_key=True, serialize=False)),
                ('echographie_ou_radiograpgie', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('renseignementclinique', models.CharField(blank=True, max_length=254, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.consultation')),
            ],
        ),
        migrations.CreateModel(
            name='Bilan_biologique',
            fields=[
                ('numbilanbio', models.AutoField(primary_key=True, serialize=False)),
                ('typeexamen', models.CharField(choices=[('Sérologie rétroviral', 'Sérologie rétroviral'), ('IgG anti VHE', 'IgG anti VHE'), ('IgM anti VHE', 'IgM anti VHE'), ('Ac anti VHD', 'Ac anti VHD'), ('Ac anti HBe', 'Ac anti HBe'), ('Ag HBe', 'Ag HBe')], max_length=100)),
                ('resultatmodalite', models.CharField(choices=[('positif', 'positif'), ('négatif', 'négatif')], max_length=100)),
                ('unite', models.CharField(choices=[('UI/ ml', 'UI/ ml'), ('mmol/ l', 'mmol/ l'), ('g/l', 'g/l'), ('/mm3', '/mm3')], max_length=100)),
                ('resultatnumerique', models.CharField(max_length=100)),
                ('resultatdubilan', models.CharField(max_length=100)),
                ('datedubilan', models.DateTimeField(blank=True, null=True)),
                ('prix', models.CharField(max_length=100)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.consultation')),
            ],
        ),
        migrations.CreateModel(
            name='Antecedant_medical',
            fields=[
                ('refant', models.AutoField(primary_key=True, serialize=False)),
                ('dyslipidemie', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cirrhose', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('hepatiteviraleb', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('datehepvirb', models.DateField(blank=True, null=True)),
                ('hepatiteviralec', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('datehepvirc', models.DateField(blank=True, null=True)),
                ('hepatiteviraled', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('datehepvird', models.DateField(blank=True, null=True)),
                ('vaccination_vhb', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('dosevhb', models.CharField(blank=True, max_length=40, null=True)),
                ('vaccination_vha', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('dosevha', models.CharField(blank=True, max_length=40, null=True)),
                ('transfusion_sanguine', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('datransing', models.DateField(blank=True, null=True)),
                ('ictere', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('rapportsexuelnonprotege', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('partageobjettoilette', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('accidexposang', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('toxicomanie', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('diabete', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('hta', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('transplanhepatique', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('precisionautre', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Antecedant_genecologique',
            fields=[
                ('refantgen', models.AutoField(primary_key=True, serialize=False)),
                ('datederniereregle', models.DateField(blank=True, null=True)),
                ('gestite', models.CharField(blank=True, max_length=5, null=True)),
                ('parite', models.CharField(blank=True, max_length=5, null=True)),
                ('prisecontraceptif', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('cesarienne', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('datecesarienne', models.DateField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Antecedant_familial',
            fields=[
                ('refantfam', models.AutoField(primary_key=True, serialize=False)),
                ('hepatie_vir_ASC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cirrhose_ASC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cpf_ASC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('hepatie_vir_DSC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cirrhose_DSC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cpf_DSC', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('hepatie_vir_COL', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cirrhose_COL', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('cpf_COL', models.CharField(choices=[('oui', 'oui'), ('non', 'non'), ('ne sait pas', 'ne sait pas')], max_length=11)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Antecedant_chirurgical',
            fields=[
                ('refantchir', models.AutoField(primary_key=True, serialize=False)),
                ('operachir', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('datoperachir', models.DateField(blank=True, null=True)),
                ('avp', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3)),
                ('dateavp', models.DateField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.patient')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.service'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='type_personnel_soignant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.type_personnel_soignant'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
